{
	"info": {
		"_postman_id": "57cd2d37-4f93-4daf-82a4-57e5d0a8357d",
		"name": "APIEndPointsValidation",
		"description": "This will validate all the API endpoints are working fine or not",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "preprod",
			"item": [
				{
					"name": "GET datasource ep",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Entity bridgerequirementsetlinks is present\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"bridgerequirementsetlinks\");\r",
									"});\r",
									"\r",
									"pm.test(\"Entity builds is present in response\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"builds\");\r",
									"});\r",
									"\r",
									"pm.test(\"Entity defects is present in response\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"defects\");\r",
									"});\r",
									"\r",
									"pm.test(\"Entity defecttestrunlogs is present in response\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"defecttestrunlogs\");\r",
									"});\r",
									"\r",
									"pm.test(\"Entity executionsummaries is present in response\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"executionsummaries\");\r",
									"});\r",
									"\r",
									"pm.test(\"Entity folderhierarchies is present in response\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"folderhierarchies\");\r",
									"});\r",
									"\r",
									"pm.test(\"Entity folders is present in response\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"folders\");\r",
									"});\r",
									"\r",
									"pm.test(\"Entity latesttestrunstatuses is present in response\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"latesttestrunstatuses\");\r",
									"});\r",
									"\r",
									"pm.test(\"Entity latestrunlogs is present in response\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"latestrunlogs\");\r",
									"});\r",
									"\r",
									"pm.test(\"Entity projects is present in response\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"projects\");\r",
									"});\r",
									"\r",
									"pm.test(\"Entity releases is present in response\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"releases\");\r",
									"});\r",
									"\r",
									"pm.test(\"Entity requirementreleases is present in response\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"requirementreleases\");\r",
									"});\r",
									"\r",
									"pm.test(\"Entity requirements is present in response\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"requirements\");\r",
									"});\r",
									"\r",
									"pm.test(\"Entity requirementsets is present in response\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"requirementsets\");\r",
									"});\r",
									"\r",
									"pm.test(\"Entity requirementtestcases is present in response\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"requirementtestcases\");\r",
									"});\r",
									"\r",
									"pm.test(\"Entity testcases is present in response\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"testcases\");\r",
									"});\r",
									"\r",
									"pm.test(\"Entity testrunlogs is present in response\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"testrunlogs\");\r",
									"});\r",
									"\r",
									"pm.test(\"Entity testruns is present in response\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"testruns\");\r",
									"});\r",
									"\r",
									"pm.test(\"Entity testsuites is present in response\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"testsuites\");\r",
									"});\r",
									"\r",
									"pm.test(\"Entity users is present in response\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"users\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}/odata/v4/{{clientid}}/?apikey={{clientid}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"odata",
								"v4",
								"{{clientid}}",
								""
							],
							"query": [
								{
									"key": "apikey",
									"value": "{{clientid}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "GET bridgerequirementsetlinks",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"setTimeout(function(){}, 900);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}/odata/v4/{{clientid}}/bridgerequirementsetlinks?apikey={{clientid}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"odata",
								"v4",
								"{{clientid}}",
								"bridgerequirementsetlinks"
							],
							"query": [
								{
									"key": "apikey",
									"value": "{{clientid}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "GET  builds",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"setTimeout(function(){}, 900);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}/odata/v4/{{clientid}}/builds?apikey={{clientid}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"odata",
								"v4",
								"{{clientid}}",
								"builds"
							],
							"query": [
								{
									"key": "apikey",
									"value": "{{clientid}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "GET defects",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"setTimeout(function(){}, 900);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}/odata/v4/{{clientid}}/defects?apikey={{clientid}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"odata",
								"v4",
								"{{clientid}}",
								"defects"
							],
							"query": [
								{
									"key": "apikey",
									"value": "{{clientid}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "GET defecttestrunlogs",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"setTimeout(function(){}, 900);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}/odata/v4/{{clientid}}/defecttestrunlogs?apikey={{clientid}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"odata",
								"v4",
								"{{clientid}}",
								"defecttestrunlogs"
							],
							"query": [
								{
									"key": "apikey",
									"value": "{{clientid}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "GET executionsummaries",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"setTimeout(function(){}, 900);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}/odata/v4/{{clientid}}/executionsummaries?apikey={{clientid}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"odata",
								"v4",
								"{{clientid}}",
								"executionsummaries"
							],
							"query": [
								{
									"key": "apikey",
									"value": "{{clientid}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "GET folderhierarchies ep",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}/odata/v4/{{clientid}}/folderhierarchies?apikey={{clientid}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"odata",
								"v4",
								"{{clientid}}",
								"folderhierarchies"
							],
							"query": [
								{
									"key": "apikey",
									"value": "{{clientid}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "GET folders",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"setTimeout(function(){}, 900);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}/odata/v4/{{clientid}}/folders?apikey={{clientid}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"odata",
								"v4",
								"{{clientid}}",
								"folders"
							],
							"query": [
								{
									"key": "apikey",
									"value": "{{clientid}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "GET latesttestrunstatuses ep",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}/odata/v4/{{clientid}}/latesttestrunstatuses?apikey={{clientid}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"odata",
								"v4",
								"{{clientid}}",
								"latesttestrunstatuses"
							],
							"query": [
								{
									"key": "apikey",
									"value": "{{clientid}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "GET latestrunlogs",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"setTimeout(function(){}, 900);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}/odata/v4/{{clientid}}/latestrunlogs?apikey={{clientid}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"odata",
								"v4",
								"{{clientid}}",
								"latestrunlogs"
							],
							"query": [
								{
									"key": "apikey",
									"value": "{{clientid}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "GET projects",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"setTimeout(function(){}, 500);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}/odata/v4/{{clientid}}/projects?apikey={{clientid}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"odata",
								"v4",
								"{{clientid}}",
								"projects"
							],
							"query": [
								{
									"key": "apikey",
									"value": "{{clientid}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "GET releases",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"setTimeout(function(){}, 500);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}/odata/v4/{{clientid}}/releases?apikey={{clientid}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"odata",
								"v4",
								"{{clientid}}",
								"releases"
							],
							"query": [
								{
									"key": "apikey",
									"value": "{{clientid}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "GET requirementreleases ep",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}/odata/v4/{{clientid}}/requirementreleases?apikey={{clientid}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"odata",
								"v4",
								"{{clientid}}",
								"requirementreleases"
							],
							"query": [
								{
									"key": "apikey",
									"value": "{{clientid}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "GET requirements",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"setTimeout(function(){}, 500);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}/odata/v4/{{clientid}}/requirements?apikey={{clientid}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"odata",
								"v4",
								"{{clientid}}",
								"requirements"
							],
							"query": [
								{
									"key": "apikey",
									"value": "{{clientid}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "GET requirementsets ep",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}/odata/v4/{{clientid}}/requirementsets?apikey={{clientid}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"odata",
								"v4",
								"{{clientid}}",
								"requirementsets"
							],
							"query": [
								{
									"key": "apikey",
									"value": "{{clientid}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "GET requirementtestcases",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"setTimeout(function(){}, 500);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}/odata/v4/{{clientid}}/requirementtestcases?apikey={{clientid}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"odata",
								"v4",
								"{{clientid}}",
								"requirementtestcases"
							],
							"query": [
								{
									"key": "apikey",
									"value": "{{clientid}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "GET testcases",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"setTimeout(function(){}, 500);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}/odata/v4/{{clientid}}/testcases?apikey={{clientid}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"odata",
								"v4",
								"{{clientid}}",
								"testcases"
							],
							"query": [
								{
									"key": "apikey",
									"value": "{{clientid}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "GET testrunlogs",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}/odata/v4/{{clientid}}/testrunlogs?apikey={{clientid}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"odata",
								"v4",
								"{{clientid}}",
								"testrunlogs"
							],
							"query": [
								{
									"key": "apikey",
									"value": "{{clientid}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "GET testruns",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"setTimeout(function(){}, 500);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}/odata/v4/{{clientid}}/testruns?apikey={{clientid}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"odata",
								"v4",
								"{{clientid}}",
								"testruns"
							],
							"query": [
								{
									"key": "apikey",
									"value": "{{clientid}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "GET testsuites ep",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}/odata/v4/{{clientid}}/testsuites?apikey={{clientid}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"odata",
								"v4",
								"{{clientid}}",
								"testsuites"
							],
							"query": [
								{
									"key": "apikey",
									"value": "{{clientid}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "GET users",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"setTimeout(function(){}, 500);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}/odata/v4/{{clientid}}/users?apikey={{clientid}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"odata",
								"v4",
								"{{clientid}}",
								"users"
							],
							"query": [
								{
									"key": "apikey",
									"value": "{{clientid}}"
								}
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"auth": {
		"type": "basic",
		"basic": [
			{
				"key": "username",
				"value": "11181210@test.com",
				"type": "string"
			},
			{
				"key": "password",
				"value": "Testing@123",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "clientid",
			"value": "26997"
		},
		{
			"key": "URL",
			"value": "http://ta-kong-preprod-alb-1075443341.us-east-1.elb.amazonaws.com"
		},
		{
			"key": "Authorization",
			"value": "Basic MTExODEyMTBAdGVzdC5jb206VGVzdGluZ0AxMjM="
		}
	]
}